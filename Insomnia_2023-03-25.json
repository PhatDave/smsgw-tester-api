{"_type":"export","__export_format":4,"__export_date":"2023-03-26T13:34:18.307Z","__export_source":"insomnia.desktop.app:v2023.1.0","resources":[{"_id":"req_764b39a9f45a4d799868ca02848ac3ca","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775791376,"created":1676884718045,"url":"http://localhost:8190/api/client","name":"Get Clients","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1676884718045,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"wrk_7389667961f74721bc4d6420217ba550","parentId":null,"modified":1676884718014,"created":1676884718014,"name":"New Document","description":"","scope":"design","_type":"workspace"},{"_id":"req_6f5f9c1601284b26afeade3a2f631ad6","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775797387,"created":1679673587013,"url":"http://localhost:8190/api/client/0","name":"Get Client By ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1676884718020,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7d3f9b2d2a714e79b3f5ef6ac99a91f8","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775801692,"created":1676892891206,"url":"http://localhost:8190/api/client","name":"New Client","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"url\": \"smpp://localhost:7001\",\n\t\"username\": \"test\",\n\t\"password\": \"test\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717982.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_f677fa4d6877415aa39d86972a011403","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775804080,"created":1679754961166,"url":"http://localhost:8190/api/client/0","name":"Modify Client","description":"","method":"PATCH","body":{"mimeType":"application/json","text":"{\n\t\"username\": \"test4\",\n\t\"password\": \"test\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717963.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7db92f6783564493ba43d836a4517adf","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679779607444,"created":1679673612551,"url":"http://localhost:8190/api/client/1/connect","name":"Connect Client","description":"","method":"POST","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717945,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5803355af3ce40ce834609d068a40783","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679779903526,"created":1679673669494,"url":"http://localhost:8190/api/client/1/bind","name":"Bind Client","description":"","method":"POST","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717895,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_4333e49c92604fcc901d9a0e3782cbd5","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679757988735,"created":1679673684873,"url":"http://localhost:8190/api/client/0/send","name":"Send Message","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"AAAAAAAAAAAAAA\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717845,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_9ca15826bd644eadb25df53b0f74bb14","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679836603505,"created":1679836600437,"url":"http://localhost:8190/api/client/0/send","name":"Config Default Send Message","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"AAAAAAAAAAAAAA\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717832.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_3d1ec554ecfe43c1a61447fa579d6488","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679837458263,"created":1679836608799,"url":"http://localhost:8190/api/client/0/send/default","name":"Send Default Send Message","description":"","method":"POST","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717826.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_bc0fcb67291748c1a5c90b00a5274c0b","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679746346832,"created":1679687966845,"url":"http://localhost:8190/api/client/0/sendMany","name":"Send Message Interval","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"121231231231231231321\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\",\n\t\"count\": 10000,\n\t\"interval\": \"1\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717820,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_1ae5348362874150a217769c8726daff","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679783249065,"created":1679687996352,"url":"http://localhost:8190/api/client/1/sendMany","name":"Send Message Per Second","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"BBBBBBBBBB\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\",\n\t\"count\": 10,\n\t\"perSecond\": 3\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717807.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_014cd8e84aa74845b9abb80e364fa001","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679836890714,"created":1679836861020,"url":"http://localhost:8190/api/client/0/sendMany","name":"Config Default Many Send Message","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"BBBBBBBBBB\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\",\n\t\"count\": 10,\n\t\"perSecond\": 3\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717804.375,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8086a20a390b4e1e87d2abdbf7e3d549","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679837454519,"created":1679836870277,"url":"http://localhost:8190/api/client/0/sendMany/default","name":"Send Many Default Send Message","description":"","method":"POST","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717802.8125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_9962171d6bfd4095bb7ec8e3b6767e9f","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679746339659,"created":1679689374808,"url":"http://localhost:8190/api/client/0/sendMany","name":"Cancel Send Many","description":"","method":"DELETE","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717801.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_94aa1247c1e243c28a420fb9585df004","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679780165959,"created":1679673777492,"url":"http://localhost:8190/api/client/1/connect","name":"Disconnect Client","description":"","method":"DELETE","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717795,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_b9e0b83f024349108f43f58616a63692","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679764395079,"created":1679674191076,"url":"http://localhost:8190/api/client/0","name":"Delete Client","description":"","method":"DELETE","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717745,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_d4a246515b874f3aabb877e260e65112","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775814980,"created":1679749985592,"url":"http://localhost:8190/api/center","name":"Get Centers","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1676884717695,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8ab0946b62954d52a53b9512b2b463ae","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775817737,"created":1679750004140,"url":"http://localhost:8190/api/center/0","name":"Get Center By ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1676884717645,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_0cd3e00064ff4b579f18d3262f32e83f","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775821919,"created":1679761300675,"url":"http://localhost:8190/api/center/0/session","name":"Get Center Sessions By ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1676884717620,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e54a3659c65d4b70a549c2399949e873","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775826226,"created":1679761641015,"url":"http://localhost:8190/api/center/0/session/349969","name":"Close Center Server By ID","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1676884717607.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_71dca6f93d7f4dd7bb699a208be85f77","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775828156,"created":1679761681356,"url":"http://localhost:8190/api/center/0/session/677150/destroy","name":"Destroy Center Server By ID","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1676884717601.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_c463efe38fe447f1a207ae8f8c6e89df","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775830350,"created":1679750017153,"url":"http://localhost:8190/api/center","name":"New Center","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"port\": \"7001\",\n\t\"username\": \"test\",\n\t\"password\": \"test\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717595,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_9dee7455905547f78b928c0bacc2b394","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679775831482,"created":1679758286474,"url":"http://localhost:8190/api/center/0","name":"Modify Center","description":"","method":"PATCH","body":{"mimeType":"application/json","text":"{\n\t\"username\": \"test\",\n\t\"password\": \"test2\",\n\t\"mode\": 1\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717570,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_0316bc6541da490a8e154d04eecb249c","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679758730653,"created":1679758722477,"url":"http://localhost:8190/api/center/modes","name":"Get Available Center Modes","description":"","method":"GET","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717557.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_a3c9f6b516684c24b93f9f82d101db06","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679757981799,"created":1679750118437,"url":"http://localhost:8190/api/center/0/send","name":"Notify Message","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"22222\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717545,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_08fe1f233bbc4c3babb136179b3f4200","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679837353245,"created":1679837350873,"url":"http://localhost:8190/api/center/0/send","name":"Config Default Notify Message","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"22222\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717520,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_583633bf603845adba09ceac16afd2df","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679837614928,"created":1679837435442,"url":"http://localhost:8190/api/center/0/send/default","name":"Send Default Notify Message","description":"","method":"POST","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717507.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_81aa8f96964a4894a715957bf30cecc1","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679750815134,"created":1679750800144,"url":"http://localhost:8190/api/center/0/sendMany","name":"Notify Message Interval","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"121231231231231231321\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\",\n\t\"count\": 10000,\n\t\"interval\": \"1\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717495,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_985a5a8463f3441491cf266ac93d803e","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679751225362,"created":1679750808900,"url":"http://localhost:8190/api/center/0/sendMany","name":"Notify Message Per Second","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"BBBBBBBBBB\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\",\n\t\"count\": 100,\n\t\"perSecond\": \"10\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717445,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_ca63cd4d4d6d44ae814c4beb31312d85","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679837634780,"created":1679837588894,"url":"http://localhost:8190/api/center/0/sendMany","name":"Config Many Default Notify Message","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"source\": \"22222\",\n\t\"destination\": \"BBBBBBBBBB\",\n\t\"message\": \"AAAAAAAAAAAAAAAAAAa\",\n\t\"count\": 100,\n\t\"perSecond\": \"10\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717420,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_2139139daa394149a6ad0aae89861812","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679837631097,"created":1679837594520,"url":"http://localhost:8190/api/center/0/sendMany/default","name":"Send Many Default Notify Message","description":"","method":"POST","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717407.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_b62ae5a63e514306812467a85a78eaf4","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679750867531,"created":1679750860669,"url":"http://localhost:8190/api/center/0/sendMany","name":"Cancel Notify Many","description":"","method":"DELETE","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717395,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8b8f6a665acc4d71b1db8c685d32e383","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679751389134,"created":1679751384208,"url":"http://localhost:8190/api/center/0/connect","name":"Disconnect Center Sessions","description":"","method":"DELETE","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717345,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_2ac7b05331cd40338069bdc2ebcf88dc","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679764397900,"created":1679764390063,"url":"http://localhost:8190/api/center/0","name":"Delete Center","description":"","method":"DELETE","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1676884717295,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_e857e51d65ae24aea0030537d637b7d9acb62171","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1676884718027,"created":1676884718027,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1676884718027,"_type":"environment"},{"_id":"jar_e857e51d65ae24aea0030537d637b7d9acb62171","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1676884718035,"created":1676884718035,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_4a07de87867249d58f9e11f466730819","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1679751863804,"created":1679673384359,"fileName":"Smsgw-tester","contents":"openapi: 3.0.0\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    `special-key` to test the authorization filters.\"\n  version: 1.0.2\n  title: Swagger Petstore\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  /pet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: \"\"\n      operationId: addPet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"405\":\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: \"\"\n      operationId: updatePet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n        \"405\":\n          description: Validation exception\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid tag value\n      deprecated: true\n  \"/pet/{petId}\":\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: \"\"\n      operationId: updatePetWithForm\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet that needs to be updated\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n      responses:\n        \"405\":\n          description: Invalid input\n    delete:\n      tags:\n        - pet\n      summary: Deletes a pet\n      description: \"\"\n      operationId: deletePet\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: petId\n          in: path\n          description: Pet id to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: \"\"\n      operationId: placeOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n        description: order placed for purchasing the pet\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid Order\n  \"/store/order/{orderId}\":\n    get:\n      tags:\n        - store\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value >= 1 and <= 10. Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of pet that needs to be fetched\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            maximum: 10\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n    delete:\n      tags:\n        - store\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value. Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order that needs to be deleted\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n  /user:\n    post:\n      tags:\n        - user\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Created user object\n        required: true\n      responses:\n        default:\n          description: successful operation\n  /user/createWithArray:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithArrayInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/createWithList:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithListInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/login:\n    get:\n      tags:\n        - user\n      summary: Logs user into the system\n      description: \"\"\n      operationId: loginUser\n      parameters:\n        - name: username\n          in: query\n          description: The user name for login\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          description: The password for login in clear text\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          headers:\n            X-Rate-Limit:\n              description: calls per hour allowed by the user\n              schema:\n                type: integer\n                format: int32\n            X-Expires-After:\n              description: date in UTC when token expires\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/xml:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid username/password supplied\n  /user/logout:\n    get:\n      tags:\n        - user\n      summary: Logs out current logged in user session\n      description: \"\"\n      operationId: logoutUser\n      responses:\n        default:\n          description: successful operation\n  \"/user/{username}\":\n    get:\n      tags:\n        - user\n      summary: Get user by user name\n      description: \"\"\n      operationId: getUserByName\n      parameters:\n        - name: username\n          in: path\n          description: \"The name that needs to be fetched. Use user1 for testing. \"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\n    put:\n      tags:\n        - user\n      summary: Updated user\n      description: This can only be done by the logged in user.\n      operationId: updateUser\n      parameters:\n        - name: username\n          in: path\n          description: name that need to be updated\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Updated user object\n        required: true\n      responses:\n        \"400\":\n          description: Invalid user supplied\n        \"404\":\n          description: User not found\n    delete:\n      tags:\n        - user\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: deleteUser\n      parameters:\n        - name: username\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\ncomponents:\n  requestBodies:\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n      description: List of user object\n      required: true\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n      description: Pet object that needs to be added to the store\n      required: true\n  schemas:\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          format: int32\n          description: User Status\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: \"#/components/schemas/Category\"\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string","contentType":"yaml","_type":"api_spec"},{"_id":"uts_52da8066c1604e54b99cf111c9936be4","parentId":"wrk_7389667961f74721bc4d6420217ba550","modified":1676884718050,"created":1676884718050,"name":"Example Test Suite","_type":"unit_test_suite"}]}